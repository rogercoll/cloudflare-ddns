name: Continuous integration

on:
  - push
  - pull_request

jobs:
  changelog:
    name: Changelog
    runs-on: ubuntu-latest

    outputs:
      changelog: ${{ steps.changed-files.outputs.all_changed_files }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35.9.1

  run_unitary_tests:
    name: Run clippy and unitary tests
    runs-on: ubuntu-latest

    needs: changelog
    if: |
      contains(needs.changelog.outputs.changelog, 'src') ||
      contains(needs.changelog.outputs.changelog, 'Cargo.toml')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy

      - name: Cargo clippy
        uses: actions-rs/clippy@master

      - name: Cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose

  image_build:
    name: Test image can build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install qemu dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static

      - name: Build image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: cloudflare-ddns
          tags: latest
          platforms: linux/amd64
          containerfiles: |
            build/container/Containerfile
  coverage:
    runs-on: ubuntu-latest
    name: ubuntu / stable / coverage
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: llvm-tools-preview
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile
      - name: cargo llvm-cov
        run: cargo llvm-cov --locked --lcov --output-path lcov.info
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
